import socket, Interaction, GrapheTAILLE = 128separateur = b'|' def preparer():    try:        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)        print(s)    except OSError:        print('Création socket échouée')        return(-1)    else:        print('Création socket réussie')        coord_S = ('127.0.0.1', 65432)        try:            s.bind(coord_S)        except OSError:            print('bind() échoué')            s.close()            return(-1)        else:            print('bind() réussi')            try:                 s.listen(1)            except OSError:                print('listen() échoué')                s.close()                return(-1)            else:                print('listen() réussi')                return(s)def accepter(sockd):    print("En attente d'un client")    try:        (s, coord_C)= sockd.accept()    except OSError:        print('accept() échoué')        return(-1)    else:        print('accept() réussi pour le client', coord_C)        return(s)def analyser(bloc):    print('Requête reçue = ',bloc.decode())    return(bloc.decode())def construire(message):    rep = interaction.questionReponse(message)    print('Construction réponse effectuée')    return str(rep).encode()def echanger(s_comm):    code_sortie = 0    print("En attente d'un message d'un client")    try:        requete = s_comm.recv(TAILLE)    except ConnectionResetError:        print('recv(): le client a quitté sauvagement')        return(-1)    else:        if (len(requete) == 0):            print('recv(): le client a quitté proprement')            return(-1)        else:            message = analyser(requete)            reponse = construire(message)            try:                qte = s_comm.send(reponse)            except (ConnectionResetError,ConnectionAbortedError):                print('send() : le client a quitté sauvagement')                return(-1)            else:                print('Taille réponse envoyée = ',qte)                return(code_sortie)def arreter(s, nom):    try:        s.close()    except OSError:        print('Socket',nom,'encore ouverte !')    else:        print('Socket',nom,'correctement fermée')# programme principalinteraction = Interaction.Interaction(Graphe.Graphe())cpt = 0s1 = preparer()on_continue = 0if (s1 != -1):    s2 = accepter(s1)    if (s2 != -1):        while (on_continue == 0):            on_continue = echanger(s2)        arreter(s2,'s2')    arreter(s1,'s1')